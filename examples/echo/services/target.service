#===============================================================================
# Orca - Target -> Echo Demo
#===============================================================================
# This unit is part of the Orca project Echo Demo. It spins up a simple Node
# Server that echoes whatever message it receives.

# **Note** Orca targets do not need to run in Docker or be a part of the same
# cluster running Orca.  Orca just needs to be pointed at a target service's IP
# address, and this is convenient, haha.

[Unit]
Description=Spin Up Target
Before=leader.service


[Service]
TimeoutStartSec=0

ExecStartPre=/usr/bin/echo "========================"
ExecStartPre=/usr/bin/echo "  New Service Starting"
ExecStartPre=/usr/bin/echo "========================"

# Display this service's public IP address.
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/echo "Public IP Address: ${COREOS_PUBLIC_IPV4}"
ExecStartPre=/usr/bin/echo "Private IP Address: ${COREOS_PRIVATE_IPV4}"

# Register the Echo Server with Orca's DNS.
ExecStartPre=/usr/bin/etcdctl set /skydns/orca/target \
    '{"host":"${COREOS_PRIVATE_IPV4}"}'


# Pull the Target Service Docker Container.
ExecStartPre=-/usr/bin/docker kill target
ExecStartPre=-/usr/bin/docker rm target
ExecStartPre=/usr/bin/docker pull pandapup/orca_echo_target

# Deploy the Target Service
ExecStart=/usr/bin/docker run --name target -p 1337:1337 pandapup/orca_echo_target /bin/bash -c \
  "cd orca && \
  git pull && npm install && \
  cd examples/echo/target-app && \
  coffee echo.coffee"

[Install]
WantedBy=multi-user.target
