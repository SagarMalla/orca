#===============================================================================
# Orca - Drone -> Echo Demo
#===============================================================================
# This unit is part of the Orca project. It spins up an Orca Drone. Drones are
# agents in the Orca cluster that receive istructions to download tests using
# npm.  Once a quorum is reached, they are instructed to launch a test againt
# a target service.  They report their results to the Leader where they are
# aggregated.

[Unit]
Description=Spin Up Drone

[Service]
TimeoutStartSec=0

ExecStartPre=/usr/bin/echo "========================"
ExecStartPre=/usr/bin/echo "  New Service Starting"
ExecStartPre=/usr/bin/echo "========================"

# Display this service's IP addresses.
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/echo "Public IP Address: ${COREOS_PUBLIC_IPV4}"
ExecStartPre=/usr/bin/echo "Private IP Address: ${COREOS_PRIVATE_IPV4}"


# Pull Orca's Drone's Docker Container.
ExecStartPre=-/usr/bin/docker kill drone
ExecStartPre=-/usr/bin/docker rm drone
ExecStartPre=/usr/bin/docker pull pandapup/orca_echo_leader

# Deploy the Drone.  Until newer NodeJS and CoffeeScript packages are published,
# we'll need the "source" line as a prefix to any of these commands.
ExecStart=/usr/bin/docker run --name drone --link skydns:dns \
  pandapup/orca_echo_leader /bin/bash -c \
  'echo "nameserver $DNS_PORT_53_TCP_ADDR" > /etc/resolv.conf &&\
  source ~/.nvm/nvm.sh && nvm use 0.11 && \
  cd orca && \
  git checkout coreos-echo && git pull && npm install && \
  cd examples/echo/drone && \
  coffee --nodejs --harmony /orca/bin/orca-drone .'

[Install]
WantedBy=multi-user.target
