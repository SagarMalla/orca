#===============================================================================
# Orca - Redis
#===============================================================================
# This unit is part of the Orca project. It spins up a server running Redis, a
# distributed key-value store.  Using Redis's publish-subscribe mechanism
# (pub-sub), Orca Drones can communicate with each other and the Leader about
# the test results and the health of the swarm.  This service is started second,
# after SkyDNS but before the Leader and Drones.

[Unit]
Description=Spin Up Redis
Before=skydns.service


[Service]
TimeoutStartSec=0

ExecStartPre=/usr/bin/echo "========================"
ExecStartPre=/usr/bin/echo "  New Service Starting"
ExecStartPre=/usr/bin/echo "========================"

# Display this service's IP address and register it with Orca's DNS.
EnvironmentFile=/etc/environment
ExecStartPre=/usr/bin/echo "Public IP Address: ${COREOS_PUBLIC_IPV4}"
ExecStartPre=/usr/bin/echo "Private IP Address: ${COREOS_PRIVATE_IPV4}"
ExecStartPre=/usr/bin/etcdctl set /skydns/orca/redis \
    '{"host":"${COREOS_PUBLIC_IPV4}", "port":6379}'


# Pull Official Redis Docker Container
ExecStartPre=-/usr/bin/docker kill redis
ExecStartPre=-/usr/bin/docker rm redis
ExecStartPre=/usr/bin/docker pull dockerfile/redis

# Deploy Redis.  This container is linked with the SkyDNS container.
ExecStart=/usr/bin/docker run --name redis -p 6379:6379 dockerfile/redis

[Install]
WantedBy=multi-user.target
